{"id":"node_modules/semantic-ui-vue/dist/commonjs/modules/Dropdown/DropdownMenu.js","dependencies":[{"name":"/home/anderson/reservation-app/package.json","includedInParent":true,"mtime":1565037056203},{"name":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/package.json","includedInParent":true,"mtime":1564431753732},{"name":"babel-helper-vue-jsx-merge-props","loc":{"line":7,"column":43},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/modules/Dropdown/DropdownMenu.js","resolved":"/home/anderson/reservation-app/node_modules/babel-helper-vue-jsx-merge-props/index.js"},{"name":"../../lib","loc":{"line":11,"column":19},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/modules/Dropdown/DropdownMenu.js","resolved":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/lib/index.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _babelHelperVueJsxMergeProps = require('babel-helper-vue-jsx-merge-props');\n\nvar _babelHelperVueJsxMergeProps2 = _interopRequireDefault(_babelHelperVueJsxMergeProps);\n\nvar _lib = require('../../lib');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar visualStates = {\n  closed: 'closed',\n  opening: 'opening',\n  open: 'open',\n  closing: 'closing'\n};\nexports.default = {\n  name: 'SuiDropdownMenu',\n  mixins: [_lib.SemanticUIVueMixin],\n  data: function data() {\n    return {\n      open: false,\n      visualState: visualStates.closed\n    };\n  },\n  computed: {\n    animation: function animation() {\n      var animation = this.$parent.animation;\n\n      switch (this.visualState) {\n        case visualStates.opening:\n          return 'animating ' + animation + ' in visible';\n\n        case visualStates.closing:\n          return 'animating ' + animation + ' out visible';\n\n        default:\n          return '';\n      }\n    }\n  },\n  watch: {\n    open: function open(newValue) {\n      this.visualState = newValue ? visualStates.opening : visualStates.closing;\n    }\n  },\n  mounted: function mounted() {\n    var parent = this.$parent;\n\n    while (parent && !this.accordion) {\n      if (/^SuiDropdown(WithRequired)?$/.test(parent.$options.name)) {\n        this.dropdown = parent;\n      }\n\n      parent = parent.$parent;\n    }\n\n    if (!this.dropdown) {\n      throw new Error('SuiDropdownMenu must be place as a child of a SuiDropdown');\n    }\n\n    this.dropdown.register(this);\n    this.$el.addEventListener((0, _lib.getEventAnimationEnd)(), this.onAnimationEnded, false);\n  },\n  methods: {\n    onAnimationEnded: function onAnimationEnded() {\n      this.visualState = this.open ? visualStates.open : visualStates.closed;\n    },\n    setOpen: function setOpen(open) {\n      this.open = open;\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var ElementType = this.getElementType();\n    return h(ElementType, (0, _babelHelperVueJsxMergeProps2.default)([{\n      attrs: {\n        tabindex: '-1'\n      }\n    }, this.getChildPropsAndListeners(), {\n      'class': this.classes('menu', this.open && 'visible active', 'transition', this.animation)\n    }]), [this.$slots.default]);\n  },\n  meta: {\n    parent: 'SuiDropdown'\n  }\n};"},"sourceMaps":null,"error":null,"hash":"414736921f6410c208c8d37b45043b21","cacheData":{"env":{}}}