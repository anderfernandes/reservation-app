{"id":"node_modules/lodash/_baseIsEqual.js","dependencies":[{"name":"/home/anderson/reservation-app/package.json","includedInParent":true,"mtime":1565037056203},{"name":"/home/anderson/reservation-app/node_modules/lodash/package.json","includedInParent":true,"mtime":1564431754536},{"name":"./_baseIsEqualDeep","loc":{"line":1,"column":30},"parent":"/home/anderson/reservation-app/node_modules/lodash/_baseIsEqual.js","resolved":"/home/anderson/reservation-app/node_modules/lodash/_baseIsEqualDeep.js"},{"name":"./isObjectLike","loc":{"line":2,"column":27},"parent":"/home/anderson/reservation-app/node_modules/lodash/_baseIsEqual.js","resolved":"/home/anderson/reservation-app/node_modules/lodash/isObjectLike.js"}],"generated":{"js":"var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n"},"sourceMaps":null,"error":null,"hash":"5b73382b1860ed43e4752a47240ca465","cacheData":{"env":{}}}