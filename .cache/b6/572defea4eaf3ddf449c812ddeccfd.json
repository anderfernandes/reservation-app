{"id":"node_modules/semantic-ui-vue/dist/commonjs/collections/Menu/MenuItem.js","dependencies":[{"name":"/home/anderson/reservation-app/package.json","includedInParent":true,"mtime":1565037056203},{"name":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/package.json","includedInParent":true,"mtime":1564431753732},{"name":"babel-helper-vue-jsx-merge-props","loc":{"line":7,"column":43},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/collections/Menu/MenuItem.js","resolved":"/home/anderson/reservation-app/node_modules/babel-helper-vue-jsx-merge-props/index.js"},{"name":"../../lib","loc":{"line":11,"column":19},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/collections/Menu/MenuItem.js","resolved":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/lib/index.js"},{"name":"../../lib/PropTypes","loc":{"line":13,"column":25},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/collections/Menu/MenuItem.js","resolved":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/lib/PropTypes.js"},{"name":"../../elements/Icon/Icon","loc":{"line":15,"column":20},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/collections/Menu/MenuItem.js","resolved":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/elements/Icon/Icon.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _babelHelperVueJsxMergeProps = require('babel-helper-vue-jsx-merge-props');\n\nvar _babelHelperVueJsxMergeProps2 = _interopRequireDefault(_babelHelperVueJsxMergeProps);\n\nvar _lib = require('../../lib');\n\nvar _PropTypes = require('../../lib/PropTypes');\n\nvar _Icon = require('../../elements/Icon/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = {\n  name: 'SuiMenuItem',\n  mixins: [_lib.SemanticUIVueMixin],\n  props: {\n    active: {\n      type: Boolean,\n      description: 'A menu item can be active.'\n    },\n    color: _PropTypes.Enum.Color({\n      description: 'Additional colors can be specified.'\n    }),\n    content: {\n      type: String,\n      description: 'Shorthand for primary content.'\n    },\n    header: {\n      type: Boolean,\n      description: 'A menu item may include a header or may itself be a header.'\n    },\n    icon: {\n      type: [Boolean, String],\n      description: 'MenuItem can be only icon.'\n    },\n    link: {\n      type: Boolean,\n      description: 'A menu item can be link.'\n    },\n    position: (0, _PropTypes.Enum)(['left', 'right'], {\n      description: 'A menu item can take left or right position.'\n    }),\n    disabled: {\n      type: Boolean,\n      description: 'A menu item can be disabled.'\n    },\n    fitted: (0, _PropTypes.Enum)(['horizontally', 'vertically'], {\n      type: Boolean,\n      description: 'A menu item or menu can remove element padding, vertically or horizontally..'\n    })\n  },\n  render: function render() {\n    var h = arguments[0];\n    var ElementType = this.getElementType(this.link ? 'a' : 'div');\n    return h(ElementType, (0, _babelHelperVueJsxMergeProps2.default)([this.getChildPropsAndListeners(), {\n      'class': this.classes(this.disabled && 'disabled', this.active && 'active', this.fitted, this.fitted && 'fitted', this.header && 'header', this.link && 'link', this.position, 'item')\n    }]), [this.icon && h(_Icon2.default, {\n      attrs: {\n        name: this.icon\n      }\n    }, []), this.$slots.default || this.content]);\n  },\n  meta: {\n    parent: 'SuiMenu'\n  }\n};"},"sourceMaps":null,"error":null,"hash":"534c1277c3645d9ebe71822056e24b26","cacheData":{"env":{}}}