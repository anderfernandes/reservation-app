{"id":"node_modules/semantic-ui-vue/dist/commonjs/modules/Tab/TabPane.js","dependencies":[{"name":"/home/anderson/reservation-app/package.json","includedInParent":true,"mtime":1565037056203},{"name":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/package.json","includedInParent":true,"mtime":1564431753732},{"name":"./Tab","loc":{"line":7,"column":19},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/modules/Tab/TabPane.js","resolved":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/modules/Tab/Tab.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Tab = require('./Tab');\n\nvar _Tab2 = _interopRequireDefault(_Tab);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = {\n  name: 'SuiTabPane',\n  meta: {\n    parent: 'SuiTab'\n  },\n  props: {\n    title: {\n      type: String,\n      required: true\n    },\n    icon: {\n      type: String\n    },\n    label: {\n      type: String\n    },\n    attached: {\n      type: [Boolean, String],\n      default: true\n    },\n    loading: {\n      type: Boolean,\n      default: false\n    },\n    disabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      active: false\n    };\n  },\n  computed: {\n    classList: function classList() {\n      var list = ['ui', 'tab', 'segment', {\n        loading: this.active && this.loading\n      }, {\n        attached: this.attached\n      }, {\n        active: this.active\n      }];\n\n      if (typeof this.attached === 'string') {\n        list.push(this.attached);\n      }\n\n      return list;\n    }\n  },\n  mounted: function mounted() {\n    try {\n      this.findParent().addTab(this);\n    } catch (e) {\n      throw new Error('tab-pane was placed outside of tab component');\n    }\n  },\n  methods: {\n    findParent: function findParent() {\n      var parent = this.$parent;\n      var name = _Tab2.default.name;\n\n      while (parent.$options.name !== name) {\n        parent = parent.$parent;\n      }\n\n      return parent;\n    },\n    open: function open() {\n      this.active = true;\n    },\n    close: function close() {\n      this.active = false;\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    return this.active && h('div', {\n      'class': this.classList\n    }, [this.$slots.default]);\n  }\n};"},"sourceMaps":null,"error":null,"hash":"2e6e4a3c1079e6fc3ed9ffb916d5cf57","cacheData":{"env":{}}}