{"id":"node_modules/lodash/_toKey.js","dependencies":[{"name":"/home/anderson/reservation-app/package.json","includedInParent":true,"mtime":1565037056203},{"name":"/home/anderson/reservation-app/node_modules/lodash/package.json","includedInParent":true,"mtime":1564431754536},{"name":"./isSymbol","loc":{"line":1,"column":23},"parent":"/home/anderson/reservation-app/node_modules/lodash/_toKey.js","resolved":"/home/anderson/reservation-app/node_modules/lodash/isSymbol.js"}],"generated":{"js":"var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n"},"sourceMaps":null,"error":null,"hash":"c7b7e1ea10bd71d2b6d869f0320dc9c0","cacheData":{"env":{}}}