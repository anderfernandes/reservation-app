{"id":"node_modules/semantic-ui-vue/dist/commonjs/views/Feed/Feed.js","dependencies":[{"name":"/home/anderson/reservation-app/package.json","includedInParent":true,"mtime":1565037056203},{"name":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/package.json","includedInParent":true,"mtime":1564431753732},{"name":"babel-helper-vue-jsx-merge-props","loc":{"line":7,"column":43},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/views/Feed/Feed.js","resolved":"/home/anderson/reservation-app/node_modules/babel-helper-vue-jsx-merge-props/index.js"},{"name":"../../lib","loc":{"line":11,"column":19},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/views/Feed/Feed.js","resolved":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/lib/index.js"},{"name":"../../lib/PropTypes","loc":{"line":13,"column":25},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/views/Feed/Feed.js","resolved":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/lib/PropTypes.js"},{"name":"./FeedEvent","loc":{"line":15,"column":25},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/views/Feed/Feed.js","resolved":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/views/Feed/FeedEvent.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _babelHelperVueJsxMergeProps = require('babel-helper-vue-jsx-merge-props');\n\nvar _babelHelperVueJsxMergeProps2 = _interopRequireDefault(_babelHelperVueJsxMergeProps);\n\nvar _lib = require('../../lib');\n\nvar _PropTypes = require('../../lib/PropTypes');\n\nvar _FeedEvent = require('./FeedEvent');\n\nvar _FeedEvent2 = _interopRequireDefault(_FeedEvent);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = {\n  name: 'SuiFeed',\n  mixins: [_lib.SemanticUIVueMixin],\n  description: 'A feed presents user activity chronologically',\n  props: {\n    size: (0, _PropTypes.Enum)(['small', 'large'], {\n      description: 'A feed can have different sizes (small | large)'\n    }),\n    events: {\n      type: Array,\n      description: 'Shorthand array of props for FeedEvent'\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var ElementType = this.getElementType();\n    return h(ElementType, (0, _babelHelperVueJsxMergeProps2.default)([this.getChildPropsAndListeners(), {\n      'class': this.classes('ui', this.size, 'feed')\n    }]), [this.$slots.default || this.events && this.events.map(function (event) {\n      return h(_FeedEvent2.default, {\n        props: event\n      }, []);\n    })]);\n  }\n};"},"sourceMaps":null,"error":null,"hash":"288524e8288b1e5c1134057329ab3c8c","cacheData":{"env":{}}}