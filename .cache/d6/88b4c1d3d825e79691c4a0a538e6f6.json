{"id":"node_modules/core-js/library/modules/_to-primitive.js","dependencies":[{"name":"/home/anderson/reservation-app/package.json","includedInParent":true,"mtime":1565037056203},{"name":"/home/anderson/reservation-app/node_modules/core-js/package.json","includedInParent":true,"mtime":1564431754906},{"name":"./_is-object","loc":{"line":2,"column":23},"parent":"/home/anderson/reservation-app/node_modules/core-js/library/modules/_to-primitive.js","resolved":"/home/anderson/reservation-app/node_modules/core-js/library/modules/_is-object.js"}],"generated":{"js":"// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n"},"sourceMaps":null,"error":null,"hash":"b7c4053c5e94561f939ff823da572f30","cacheData":{"env":{}}}