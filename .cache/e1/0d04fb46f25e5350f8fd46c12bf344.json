{"id":"node_modules/semantic-ui-vue/dist/commonjs/elements/Image/Image.js","dependencies":[{"name":"/home/anderson/reservation-app/package.json","includedInParent":true,"mtime":1565037056203},{"name":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/package.json","includedInParent":true,"mtime":1564431753732},{"name":"../../lib","loc":{"line":7,"column":19},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/elements/Image/Image.js","resolved":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/lib/index.js"},{"name":"../../lib/PropTypes","loc":{"line":9,"column":25},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/elements/Image/Image.js","resolved":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/lib/PropTypes.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _lib = require('../../lib');\n\nvar _PropTypes = require('../../lib/PropTypes');\n\nexports.default = {\n  name: 'SuiImage',\n  mixins: [_lib.SemanticUIVueMixin],\n  props: {\n    avatar: {\n      type: Boolean,\n      description: 'An image may be formatted to appear inline with text as an avatar.'\n    },\n    bordered: {\n      type: Boolean,\n      description: 'An image may include a border to emphasize the edges of white or transparent content.'\n    },\n    circular: {\n      type: Boolean,\n      description: 'An image may appear circular.'\n    },\n    rounded: {\n      type: Boolean,\n      description: 'An image may appear rounded.'\n    },\n    disabled: Boolean,\n    hidden: Boolean,\n    size: _PropTypes.Enum.Size(),\n    spaced: (0, _PropTypes.Enum)(['left', 'right'], {\n      type: Boolean\n    }),\n    shape: (0, _PropTypes.Enum)(['rounded', 'circular']),\n    src: {\n      type: String,\n      required: true\n    },\n    floated: (0, _PropTypes.Enum)(['left', 'right']),\n    centered: Boolean,\n    verticalAlign: _PropTypes.Enum.VerticalAlign({\n      description: 'An image can specify its vertical alignment.'\n    }),\n    wrapped: Boolean\n  },\n  render: function render() {\n    var h = arguments[0];\n    var ElementType = this.getElementType('div');\n    var classNames = this.classes('ui', this.avatar && 'avatar', this.size, this.shape, this.verticalAlign && this.verticalAlign + ' aligned', this.floated && this.floated + ' floated', this.centered && 'centered', this.bordered && 'bordered', this.rounded && 'rounded', this.circular && 'circular', this.spaced, this.spaced && 'spaced', this.hidden && 'hidden', this.disabled && 'disabled', 'image');\n\n    if (this.wrapped || this.$slots.corner || this.$slots.label) {\n      return h(ElementType, {\n        'class': classNames\n      }, [this.$slots.corner, h('img', {\n        attrs: {\n          src: this.src\n        }\n      }, []), this.$slots.label]);\n    }\n\n    return h('img', {\n      'class': classNames,\n      attrs: {\n        src: this.src\n      }\n    }, []);\n  }\n};"},"sourceMaps":null,"error":null,"hash":"cbe3170cd369fd43b0b6366ac4883641","cacheData":{"env":{}}}