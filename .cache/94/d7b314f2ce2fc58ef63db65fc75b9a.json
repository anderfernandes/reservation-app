{"id":"node_modules/semantic-ui-vue/dist/commonjs/modules/Dropdown/DropdownItem.js","dependencies":[{"name":"/home/anderson/reservation-app/package.json","includedInParent":true,"mtime":1565037056203},{"name":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/package.json","includedInParent":true,"mtime":1564431753732},{"name":"babel-helper-vue-jsx-merge-props","loc":{"line":7,"column":43},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/modules/Dropdown/DropdownItem.js","resolved":"/home/anderson/reservation-app/node_modules/babel-helper-vue-jsx-merge-props/index.js"},{"name":"../../lib","loc":{"line":11,"column":19},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/modules/Dropdown/DropdownItem.js","resolved":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/lib/index.js"},{"name":"../../elements/Flag/Flag","loc":{"line":13,"column":20},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/modules/Dropdown/DropdownItem.js","resolved":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/elements/Flag/Flag.js"},{"name":"../../elements/Image/Image","loc":{"line":17,"column":21},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/modules/Dropdown/DropdownItem.js","resolved":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/elements/Image/Image.js"},{"name":"../../elements/Icon/Icon","loc":{"line":21,"column":20},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/modules/Dropdown/DropdownItem.js","resolved":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/elements/Icon/Icon.js"},{"name":"../../elements/Label/Label","loc":{"line":25,"column":21},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/modules/Dropdown/DropdownItem.js","resolved":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/elements/Label/Label.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _babelHelperVueJsxMergeProps = require('babel-helper-vue-jsx-merge-props');\n\nvar _babelHelperVueJsxMergeProps2 = _interopRequireDefault(_babelHelperVueJsxMergeProps);\n\nvar _lib = require('../../lib');\n\nvar _Flag = require('../../elements/Flag/Flag');\n\nvar _Flag2 = _interopRequireDefault(_Flag);\n\nvar _Image = require('../../elements/Image/Image');\n\nvar _Image2 = _interopRequireDefault(_Image);\n\nvar _Icon = require('../../elements/Icon/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nvar _Label = require('../../elements/Label/Label');\n\nvar _Label2 = _interopRequireDefault(_Label);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nexports.default = {\n  name: 'SuiDropdownItem',\n  mixins: [_lib.SemanticUIVueMixin],\n  props: {\n    flag: {\n      type: String,\n      description: 'Shorthand for sui-flag.'\n    },\n    image: {\n      type: Object,\n      description: 'Shorthand for sui-image.'\n    },\n    icon: {\n      type: String,\n      description: 'Shorthand for sui-icon.'\n    },\n    label: {\n      type: Object,\n      description: 'Shorthand for sui-label'\n    },\n    text: {\n      type: String,\n      description: 'Display text.'\n    },\n    value: {\n      type: null,\n      description: 'Stored value.'\n    },\n    active: {\n      type: Boolean,\n      default: false,\n      description: 'Style as the currently chosen item.'\n    },\n    selected: {\n      type: Boolean,\n      default: false,\n      description: 'Is item selected'\n    },\n    disabled: {\n      type: Boolean,\n      default: false,\n      description: 'A dropdown item can be disabled.'\n    }\n  },\n  events: {\n    select: {\n      custom: true\n    }\n  },\n  methods: {\n    select: function select() {\n      this.$emit('select', this.value);\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var ElementType = this.getElementType();\n    return h(ElementType, (0, _babelHelperVueJsxMergeProps2.default)([this.getChildPropsAndListeners(), {\n      attrs: {\n        role: 'option'\n      },\n      'class': this.classes(this.disabled && 'disabled', this.active && 'active', this.selected && 'selected', 'item'),\n      on: {\n        'click': this.select\n      }\n    }]), [this.icon && h(_Icon2.default, {\n      attrs: {\n        name: this.icon\n      }\n    }, []), this.image && h(_Image2.default, {\n      props: this.image\n    }, []), this.flag && h(_Flag2.default, {\n      attrs: {\n        name: this.flag\n      }\n    }, []), this.label && h(_Label2.default, {\n      props: this.label\n    }, []), this.text || this.$slots.default]);\n  },\n  meta: {\n    parent: 'SuiDropdown'\n  }\n};"},"sourceMaps":null,"error":null,"hash":"434946f4740fad51a5821b34d397759d","cacheData":{"env":{}}}