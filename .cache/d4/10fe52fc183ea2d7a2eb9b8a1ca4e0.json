{"id":"node_modules/semantic-ui-vue/dist/commonjs/modules/Modal/Modal.js","dependencies":[{"name":"/home/anderson/reservation-app/package.json","includedInParent":true,"mtime":1565037056203},{"name":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/package.json","includedInParent":true,"mtime":1564431753732},{"name":"babel-runtime/helpers/defineProperty","loc":{"line":7,"column":31},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/modules/Modal/Modal.js","resolved":"/home/anderson/reservation-app/node_modules/babel-runtime/helpers/defineProperty.js"},{"name":"babel-runtime/helpers/toConsumableArray","loc":{"line":11,"column":34},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/modules/Modal/Modal.js","resolved":"/home/anderson/reservation-app/node_modules/babel-runtime/helpers/toConsumableArray.js"},{"name":"../../lib","loc":{"line":21,"column":19},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/modules/Modal/Modal.js","resolved":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/lib/index.js"},{"name":"../../lib/PropTypes","loc":{"line":23,"column":25},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/modules/Modal/Modal.js","resolved":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/lib/PropTypes.js"},{"name":"../../elements/Icon/Icon","loc":{"line":25,"column":20},"parent":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/modules/Modal/Modal.js","resolved":"/home/anderson/reservation-app/node_modules/semantic-ui-vue/dist/commonjs/elements/Icon/Icon.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _defineProperty2 = require('babel-runtime/helpers/defineProperty');\n\nvar _defineProperty3 = _interopRequireDefault(_defineProperty2);\n\nvar _toConsumableArray2 = require('babel-runtime/helpers/toConsumableArray');\n\nvar _toConsumableArray3 = _interopRequireDefault(_toConsumableArray2);\n\nvar _events;\n/**\n * Code taken form https://github.com/David-Desmaisons/Vue-Semantic-Modal\n * Thanks to [David Desmaisons](https://github.com/David-Desmaisons)\n */\n\n\nvar _lib = require('../../lib');\n\nvar _PropTypes = require('../../lib/PropTypes');\n\nvar _Icon = require('../../elements/Icon/Icon');\n\nvar _Icon2 = _interopRequireDefault(_Icon);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar visualStates = {\n  closed: 'closed',\n  opening: 'opening',\n  open: 'open',\n  closing: 'closing'\n};\nvar changedEvent = 'changed';\n\nfunction animationWithDirections(animation) {\n  return [animation + ' up', animation + ' down', animation + ' left', animation + ' right'];\n}\n\nvar animations = ['scale', 'drop', 'horizontal flip', 'vertical flip', 'fade'].concat((0, _toConsumableArray3.default)(animationWithDirections('fade')), (0, _toConsumableArray3.default)(animationWithDirections('fly')), (0, _toConsumableArray3.default)(animationWithDirections('swing')));\n\nfunction buildAnimation(name, direction) {\n  return 'animating ' + name + ' ' + (direction ? 'in' : 'out');\n}\n\nfunction buildClass(visualState, animation) {\n  switch (visualState) {\n    case visualStates.opening:\n      return buildAnimation(animation, true);\n\n    case visualStates.open:\n      return 'visible active';\n\n    case visualStates.closing:\n      return 'visible active ' + buildAnimation(animation, false);\n\n    case visualStates.close:\n      return 'hidden';\n\n    default:\n      return '';\n  }\n}\n\nexports.default = {\n  name: 'SuiModal',\n  model: {\n    prop: 'open',\n    event: changedEvent\n  },\n  mixins: [_lib.SemanticUIVueMixin],\n  props: {\n    animation: (0, _PropTypes.Enum)(animations, {\n      default: animations[0]\n    }),\n    animationDuration: {\n      type: Number,\n      default: 500\n    },\n    aligned: (0, _PropTypes.Enum)(['top']),\n    closeIcon: {\n      type: Boolean,\n      default: false\n    },\n    dimmer: (0, _PropTypes.Enum)(['inverted']),\n    image: {\n      type: Boolean,\n      default: false\n    },\n    open: {\n      type: Boolean,\n      default: false\n    },\n    size: (0, _PropTypes.Enum)(['standard', 'fullscreen', 'small', 'large', 'mini', 'tiny'], {\n      default: 'standard'\n    }),\n    basic: {\n      type: Boolean\n    },\n    closable: {\n      type: Boolean,\n      default: true\n    }\n  },\n  events: (_events = {\n    displayChanged: {\n      custom: true\n    }\n  }, (0, _defineProperty3.default)(_events, changedEvent, {\n    custom: true\n  }), (0, _defineProperty3.default)(_events, 'clickAwayModal', {\n    custom: true\n  }), _events),\n  data: function data() {\n    return {\n      visualState: this.open ? visualStates.open : visualStates.closed\n    };\n  },\n  computed: {\n    dimmerClass: function dimmerClass() {\n      return buildClass(this.visualState, 'fade');\n    },\n    modalClass: function modalClass() {\n      return buildClass(this.visualState, this.animation);\n    },\n    visible: function visible() {\n      return this.visualState !== visualStates.closed;\n    },\n    dimmerStyle: function dimmerStyle() {\n      return {\n        display: this.visible ? 'flex !important' : 'none !important',\n        animationDuration: this.animationDuration + 'ms'\n      };\n    },\n    modalStyle: function modalStyle() {\n      return {\n        display: this.visible ? 'block !important' : 'none !important',\n        animationDuration: this.animationDuration + 'ms'\n      };\n    }\n  },\n  watch: {\n    open: function open(newValue) {\n      this.visualState = newValue ? visualStates.opening : visualStates.closing;\n    },\n    visualState: function visualState(newValue) {\n      this.$emit('displayChanged', newValue);\n    }\n  },\n  mounted: function mounted() {\n    this.$el.addEventListener((0, _lib.getEventAnimationEnd)(), this.onAnimationEnd, true);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.$el.removeEventListener((0, _lib.getEventAnimationEnd)(), this.onAnimationEnd, true);\n  },\n  methods: {\n    close: function close() {\n      this.$emit(changedEvent, false);\n    },\n    dimmerClick: function dimmerClick(event) {\n      if (this.closable && event.target === event.currentTarget && this.visualState === visualStates.open) {\n        this.$emit('clickAwayModal');\n        this.close();\n      }\n    },\n    onAnimationEnd: function onAnimationEnd() {\n      this.visualState = this.open ? visualStates.open : visualStates.closed;\n    }\n  },\n  render: function render() {\n    var _this = this;\n\n    var h = arguments[0];\n    return h('div', {\n      ref: 'dimmer',\n      'class': this.classes('ui', this.dimmer, 'dimmer modals page transition', this.dimmerClass),\n      style: this.dimmerStyle,\n      on: {\n        'click': this.dimmerClick\n      }\n    }, [h('div', {\n      ref: 'modal',\n      style: this.modalStyle,\n      'class': this.classes('ui', this.size, this.basic && 'basic', this.aligned && this.aligned + ' aligned', 'modal', 'transition', this.modalClass)\n    }, [this.closeIcon && h(_Icon2.default, {\n      attrs: {\n        name: 'close'\n      },\n      nativeOn: {\n        'click': function click() {\n          return _this.close();\n        }\n      }\n    }, []), this.$slots.default])]);\n  }\n};"},"sourceMaps":null,"error":null,"hash":"d21ae26cb0878430ed6e78dbe43c8db4","cacheData":{"env":{}}}