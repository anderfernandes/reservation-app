{"id":"node_modules/babel-runtime/helpers/slicedToArray.js","dependencies":[{"name":"/home/anderson/reservation-app/package.json","includedInParent":true,"mtime":1565037056203},{"name":"/home/anderson/reservation-app/node_modules/babel-runtime/package.json","includedInParent":true,"mtime":1564431754876},{"name":"../core-js/is-iterable","loc":{"line":5,"column":27},"parent":"/home/anderson/reservation-app/node_modules/babel-runtime/helpers/slicedToArray.js","resolved":"/home/anderson/reservation-app/node_modules/babel-runtime/core-js/is-iterable.js"},{"name":"../core-js/get-iterator","loc":{"line":9,"column":28},"parent":"/home/anderson/reservation-app/node_modules/babel-runtime/helpers/slicedToArray.js","resolved":"/home/anderson/reservation-app/node_modules/babel-runtime/core-js/get-iterator.js"}],"generated":{"js":"\"use strict\";\n\nexports.__esModule = true;\n\nvar _isIterable2 = require(\"../core-js/is-iterable\");\n\nvar _isIterable3 = _interopRequireDefault(_isIterable2);\n\nvar _getIterator2 = require(\"../core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = (0, _getIterator3.default)(arr), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if ((0, _isIterable3.default)(Object(arr))) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();"},"sourceMaps":null,"error":null,"hash":"140f2a9e7265cfc9644326d9dfe55665","cacheData":{"env":{}}}